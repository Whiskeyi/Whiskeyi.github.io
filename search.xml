<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深拷贝&amp;浅拷贝</title>
      <link href="/copy.html"/>
      <url>/copy.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防抖(debounce)&amp;节流(throttle)</title>
      <link href="/debounce.html"/>
      <url>/debounce.html</url>
      
        <content type="html"><![CDATA[<!-- toc --><h2 id="防抖-debounce-amp-节流-throttle"><a href="#防抖-debounce-amp-节流-throttle" class="headerlink" title="防抖(debounce)&amp;节流(throttle)"></a>防抖(debounce)&amp;节流(throttle)</h2><h3 id="什么是防抖和节流？"><a href="#什么是防抖和节流？" class="headerlink" title="什么是防抖和节流？"></a>什么是防抖和节流？</h3><h4 id="防抖-debounce"><a href="#防抖-debounce" class="headerlink" title="防抖(debounce)"></a>防抖(debounce)</h4><p>&emsp;&emsp;当调用动作n毫秒后，才会执行该动作，若在这n毫秒内又调用此动作则将重新计算执行时间。<br>&emsp;&emsp;理解：持续触发不执行，不触发的一段时间之后才执行。</p><h4 id="节流-throttle"><a href="#节流-throttle" class="headerlink" title="节流(throttle)"></a>节流(throttle)</h4><p>&emsp;&emsp;预先设定一个执行周期，当调用动作的时刻大于等于执行周期则执行该动作，然后进入下一个新周期。<br>&emsp;&emsp;理解：隔一定执行周期（时间）触发一次事件。</p><h3 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h3><h4 id="debounce"><a href="#debounce" class="headerlink" title="debounce"></a>debounce</h4><p>1.<code>scroll</code>事件（资源的加载）<br>2.<code>mousemove</code>事件（拖拽）<br>3.<code>resize</code>事件（响应式布局样式）<br>4.<code>keyup</code>事件（输入框文字停止打字后才进行校验）</p><h4 id="throttle"><a href="#throttle" class="headerlink" title="throttle"></a>throttle</h4><p>1.<code>click</code>事件（不停快速点击按钮，减少触发频次）<br>2.<code>scroll</code>事件（返回顶部按钮出现\隐藏事件触发）<br>3.<code>keyup</code>事件（输入框文字与显示栏内容复制同步）<br>4.减少发送<code>ajax</code>请求，降低请求频率</p><h3 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h3><p>&emsp;&emsp;下面来看一个案例，我们为实现输入框文字和显示栏内容同步，给id为num的input对象添加监听事件，当输入框输入内容时触发监听实现，并将结果显示在id为show的input对象中。<br>&emsp;&emsp;在输入框输入文字时，大量执行了操作 DOM 的函数（操作 DOM 是很耗费性能的），如图所示:<br><img src="img/debounce/case.gif" alt="case"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../public/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.inline-block</span> &#123;</span></span><br><span class="line">      display: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">      margin-top: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.section</span> &#123;</span></span><br><span class="line">      margin-bottom: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.title</span> &#123;</span></span><br><span class="line">      margin-bottom: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.boxes</span> &#123;</span></span><br><span class="line">      font-size: 22px;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title text-center"</span>&gt;</span>Case<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boxes"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Num<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"num"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Show<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> numElmt = <span class="built_in">document</span>.getElementById(<span class="string">'num'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(numElmt.value);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">'show'</span>).value = numElmt.value;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        numElmt.addEventListener(<span class="string">'input'</span>, myFunction, <span class="literal">false</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="防抖代码实现"><a href="#防抖代码实现" class="headerlink" title="防抖代码实现"></a>防抖代码实现</h3><p>&emsp;&emsp;我们对上述代码进行防抖处理，防抖本质上是需要Window对象的setTimeout()来辅助实现，延迟运行需要执行的代码，如又调用此动作则将重新计算延迟(clearTimeout)，等延迟时间(delay)完毕时执行目标代码。<br><img src="img/debounce/debounce.gif" alt="case2"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../public/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>debounce<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.inline-block</span> &#123;</span></span><br><span class="line">      display: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">      margin-top: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.section</span> &#123;</span></span><br><span class="line">      margin-bottom: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.title</span> &#123;</span></span><br><span class="line">      margin-bottom: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.boxes</span> &#123;</span></span><br><span class="line">      font-size: 22px;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title text-center"</span>&gt;</span>Case<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boxes"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Num<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"num"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Show<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">debounce</span><span class="params">(fn, delay)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> timer = <span class="literal">null</span> <span class="comment">//闭包</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">              if(timer)  &#123;</span><br><span class="line">                  clearTimeout(timer)</span><br><span class="line">              &#125;</span><br><span class="line">              timer = setTimeout(fn, delay)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> numElmt = <span class="built_in">document</span>.getElementById(<span class="string">'num'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(numElmt.value);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">'show'</span>).value = numElmt.value;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        numElmt.addEventListener(<span class="string">'input'</span>, debounce(myFunction, <span class="number">1000</span>), <span class="literal">false</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="节流代码实现"><a href="#节流代码实现" class="headerlink" title="节流代码实现"></a>节流代码实现</h3><p>&emsp;&emsp;在函数执行一次之后，让函数在指定的时间期限内不再工作，直至过了限定期限再重新执行。节流的实现方式有很多种，在此利用setTimeout和状态位valid（表示当前函数是否处于工作状态）做一个简单的实现。<br><img src="img/debounce/throttle.gif" alt="throttle"><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../public/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>throttle<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.inline-block</span> &#123;</span></span><br><span class="line">      display: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">      margin-top: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.section</span> &#123;</span></span><br><span class="line">      margin-bottom: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.title</span> &#123;</span></span><br><span class="line">      margin-bottom: 50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.boxes</span> &#123;</span></span><br><span class="line">      font-size: 22px;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title text-center"</span>&gt;</span>throttle<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"boxes"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Num<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"num"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Show<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">disabled</span>=<span class="string">"disabled"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">throttle</span><span class="params">(fn, delay)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> valid = <span class="literal">false</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line">              fn()</span><br><span class="line"><span class="actionscript">              valid = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;, delay)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> numElmt = <span class="built_in">document</span>.getElementById(<span class="string">'num'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(numElmt.value);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">'show'</span>).value = numElmt.value;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        numElmt.addEventListener(<span class="string">'input'</span>, throttle(myFunction, <span class="number">1000</span>), <span class="literal">false</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>&emsp;&emsp;根据实际业务场景，通过对高频事件合理的利用和选择防抖(debounce)和节流(throttle)可以在一定程度上优化性能和提高用户体验。</p>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写程序,测量cacheline大小</title>
      <link href="/cacheline.html"/>
      <url>/cacheline.html</url>
      
        <content type="html"><![CDATA[<h2 id="编写程序，测量cacheline的大小"><a href="#编写程序，测量cacheline的大小" class="headerlink" title="编写程序，测量cacheline的大小"></a>编写程序，测量cacheline的大小</h2><h3 id="测量cacheline需要了解的信息"><a href="#测量cacheline需要了解的信息" class="headerlink" title="测量cacheline需要了解的信息"></a>测量cacheline需要了解的信息</h3><p>&emsp;&emsp;计算机带有两级或三级缓存，通常称为 L1、L2 和L3。L的等级越低代表离CPU越近，通过任务管理器和软件CPU-Z，我了解到在我的机器上，有一个6&times;64KB的L1数据缓存、一个6&times;64KB的L1指令缓存、一个6&times;256KB的L2缓存和一个12MB的L3数据缓存。<br>&emsp;&emsp;L1数据和指令缓存分别用于存放数据及执行数据的指令解码，L2二级缓存是L1一级缓存跟主内存之间的缓冲器，L3为L2与主内存之间的缓冲器。其中L3是计算 CPU共享的，L1、L2是CPU中核独享的。<br>&emsp;&emsp;cache分成多个组，每个组分成多个行。<br>&emsp;&emsp;如图中的8-way指的是8路组相连（8-way set associative），每个组里面有8个行。linesize是cache的基本单位，从主存向cache迁移数据都是按照linesize为单位替换的。比如linesize为64Byte，那么迁移必须一次迁移64Byte到cache。</p><p><img src="img/cacheline/task manager.png" alt="task manager"><br><img src="img/cacheline/CPU-Z.png" alt="CPU-Z"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> length = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line"><span class="comment">//  for (int i = 0; i &lt; length; i++)</span></span><br><span class="line"><span class="comment">//  &#123;</span></span><br><span class="line"><span class="comment">//      arr[i] *= 3;</span></span><br><span class="line"><span class="comment">//  &#125;  //循环1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i += <span class="number">16</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i] *= <span class="number">3</span>;</span><br><span class="line">    &#125;   <span class="comment">//循环2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;第一个循环将数组的每个值乘3，第二个循环将每16个值乘3，第二个循环只做了第一个约6%的工作，但在现代机器上，两者几乎运行相同时间：在我机器上分别是34毫秒和35毫秒（如下图所示）。<br><img src="img/cacheline/time1.png" alt="time1"><br><img src="img/cacheline/time2.png" alt="time2"><br>&emsp;&emsp;两个循环花费相同时间的原因跟内存有关。循环执行时间长短由数组的内存访问次数决定的，而非整型数的乘法运算次数。这说明这两个循环的主存访问次数是相同的。<br>&emsp;&emsp;进一步探索这个例子。我们尝试使用不同的循环步长，而不仅仅是1和16。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.Length; i += K)</span><br><span class="line">arr[i] *= <span class="number">3</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;通过程序运行所得<br>&emsp;&emsp;K1=1、S1=0.3399<br>&emsp;&emsp;K2=2、S2=0.3408<br>&emsp;&emsp;K3=4、S3=0.3428<br>&emsp;&emsp;K4=8、S4=0.345<br>&emsp;&emsp;K5=16、S5=0.3498<br>&emsp;&emsp;K6=32、S6=0.2479<br>&emsp;&emsp;K7=64、S7=0.1714<br>&emsp;&emsp;K8=128、S8=0.1144<br>&emsp;&emsp;Tips：测试时尽量关闭其他应用程序，防止缓存的抢占，且要使用尽量大的测试次数，去掉偏离较大的值取中位数，以保证测试结果不具有随机性<br>&emsp;&emsp;将上面的数据导入Excel生成折线图</p><p><img src="img/cacheline/photo1.png" alt="photo1"><br>&emsp;&emsp;可以看出从16开始，每次步长加倍，运行时间急剧下降。<br>&emsp;&emsp;原因是CPU以64字节为单位的块(chunk)拿取，称为一个缓存行(cache line)。当你读一个特定的内存地址，整个缓存行将从主存换入缓存，并且访问同一个缓存行内的其它值的开销是很小的。由于16个整型数占用64字节（一个缓存行），for循环步长在1到16之间必定接触到相同数目的缓存行：即数组中所有的缓存行。当步长32，我们只有大约每两个缓存行接触一次，当步长为64，只有每四个接触一次。</p><h3 id="测量cache"><a href="#测量cache" class="headerlink" title="测量cache"></a>测量cache</h3><p>&emsp;&emsp;遍历一个整型数组，每16个值自增1——改变每个缓存行。当遍历到最后一个值，就重头开始。我们将使用不同的数组大小，可以看到当数组溢出一级缓存大小，程序运行的性能将急剧滑落。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> length = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="keyword">int</span> steps = <span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>;  <span class="comment">//变量</span></span><br><span class="line">    <span class="keyword">int</span> lengthMod = length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; steps; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[(i * <span class="number">16</span>) % lengthMod]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;通过列表可以推断出我们计算机各级缓存的大小。</p><h3 id="测量cache-line"><a href="#测量cache-line" class="headerlink" title="测量cache line"></a>测量cache line</h3><p>&emsp;&emsp;通过上一个实验可以得到L1 cache 的大小为 384kb，下面通过一个实验来测量自己电脑L1 cache line缓存行的大小，我们采用下面的方案（具体环境配置和详细代码[此处代码做了一部分修改]可参考文末博客）：<br>&emsp;&emsp;1）开辟一块内存<br>&emsp;&emsp;2）按照不同的步长stride进行若干次内存访问<br>&emsp;&emsp;3）记录时间，统计平均的数据吞吐量(kb/s)<br>&emsp;&emsp;4）画图分析，通过柱状图分析 stride 与 kbps 的关系<br>可行性分析：因为按照不同的步长，当我们的步长在L1 cache line之内，我们能够命中上一次访问数据时，载入L1 cache的数据行，而当我们的步长超出L1 cache line的大小，就会发生miss，拉低访问的时间（以此产生较大的偏差）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KB 1024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MB 1048576</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::chrono::high_resolution_clock;</span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::chrono::duration;</span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::chrono::duration_cast;</span><br><span class="line"></span><br><span class="line">random_device rd;<span class="comment">//随机数生成</span></span><br><span class="line"><span class="function">mt19937 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">random_access</span><span class="params">(<span class="keyword">int</span> <span class="built_in">size</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">size</span> / <span class="keyword">sizeof</span>(<span class="keyword">char</span>);  </span><br><span class="line">    <span class="keyword">char</span>* <span class="built_in">buffer</span> = <span class="keyword">new</span> <span class="keyword">char</span>[n];  </span><br><span class="line">    <span class="built_in">fill</span>(<span class="built_in">buffer</span>, <span class="built_in">buffer</span>+n, <span class="number">1</span>);  </span><br><span class="line">    <span class="function">uniform_int_distribution&lt;&gt; <span class="title">dis</span><span class="params">(<span class="number">0</span>, n<span class="number">-1</span>)</span></span>;  </span><br><span class="line">    <span class="keyword">int</span> test_times = <span class="number">10000000</span> * <span class="number">10</span>;  </span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; random_index;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;test_times; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">int</span> index = dis(gen);  </span><br><span class="line">        random_index.push_back(index);   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;  </span><br><span class="line">    high_resolution_clock::time_point t1 = high_resolution_clock::now();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;test_times; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        sum += <span class="built_in">buffer</span>[random_index[i]];  </span><br><span class="line">    &#125;  </span><br><span class="line">    high_resolution_clock::time_point t2 = high_resolution_clock::now();  </span><br><span class="line">    duration&lt;<span class="keyword">double</span>&gt; time_span = duration_cast&lt;duration&lt;<span class="keyword">double</span>&gt;&gt;(t2 - t1);  </span><br><span class="line">    <span class="keyword">double</span> dt = time_span.count();  </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(<span class="built_in">size</span>/<span class="number">1024</span>)&lt;&lt;<span class="string">" "</span>&lt;&lt;(((<span class="keyword">double</span>)sum/<span class="number">1024.0</span>) / dt)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">    <span class="keyword">delete</span>[] <span class="built_in">buffer</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stride_access</span><span class="params">(<span class="keyword">char</span>* <span class="built_in">buffer</span>, <span class="keyword">int</span> stride, <span class="keyword">int</span> <span class="built_in">size</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">size</span> / <span class="keyword">sizeof</span>(<span class="keyword">char</span>);  </span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;  </span><br><span class="line">    high_resolution_clock::time_point t1 = high_resolution_clock::now();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;stride; j++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i+=stride)  </span><br><span class="line">        &#123;  </span><br><span class="line">            sum += <span class="built_in">buffer</span>[i];  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;   </span><br><span class="line">    high_resolution_clock::time_point t2 = high_resolution_clock::now();  </span><br><span class="line">    duration&lt;<span class="keyword">double</span>&gt; time_span = duration_cast&lt;duration&lt;<span class="keyword">double</span>&gt;&gt;(t2 - t1);  </span><br><span class="line">    <span class="keyword">double</span> dt = time_span.count();  </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;stride&lt;&lt;<span class="string">" "</span>&lt;&lt;(((<span class="keyword">double</span>)sum/<span class="number">1024.0</span>) / dt)&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">size</span> = <span class="number">400</span> * MB;  </span><br><span class="line">    <span class="keyword">int</span> n = <span class="built_in">size</span> / <span class="keyword">sizeof</span>(<span class="keyword">char</span>);  </span><br><span class="line">    <span class="keyword">char</span>* <span class="built_in">buffer</span> = <span class="keyword">new</span> <span class="keyword">char</span>[n];  </span><br><span class="line">    <span class="built_in">fill</span>(<span class="built_in">buffer</span>, <span class="built_in">buffer</span>+n, <span class="number">1</span>);   </span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; strides&#123;<span class="number">1</span>*B,<span class="number">2</span>*B,<span class="number">4</span>*B,<span class="number">8</span>*B,<span class="number">16</span>*B,<span class="number">32</span>*B,<span class="number">64</span>*B,<span class="number">96</span>*B,<span class="number">128</span>*B,<span class="number">192</span>*B,<span class="number">256</span>*B,<span class="number">512</span>*B,<span class="number">1024</span>*B,<span class="number">1536</span>*B,<span class="number">2048</span>*B&#125;;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> s : strides)  </span><br><span class="line">    &#123;  </span><br><span class="line">        stride_access(<span class="built_in">buffer</span>, s, <span class="built_in">size</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    test();  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>&emsp;&emsp;执行结果</p><p><img src="img/cacheline/result.png" alt="result"></p><p>&emsp;&emsp;将上面的数据生成柱状图</p><p><img src="img/cacheline/photo2.png" alt="photo2"></p><p>&emsp;&emsp;可以看到：<br>&emsp;&emsp;在步长 stride 位于 1-32 Byte 之间时，吞吐量几乎不变<br>&emsp;&emsp;在步长 stride 位于 16-128 Byte 之间，吞吐量逐步下降<br>&emsp;&emsp;在步长 stride 大于 128 Byte 之后，吞吐量几乎不变<br>&emsp;&emsp;当步长 stride 小于 L1 cache line 时，若干次访问才会发生一次 miss（访问的偏移量超出一行 L1 cache line），而当步长 stride 大于 L1 cache line，每次访问都会miss。<br>&emsp;&emsp;根据测试数据，推测 L1 cache line 约为 64 Byte，这与我们的测试结果相吻合。</p><p>参考博客：<br>&emsp;&emsp;<a href="http://igoro.com/archive/gallery-of-processor-cache-effects/" target="_blank" rel="noopener">http://igoro.com/archive/gallery-of-processor-cache-effects/</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/qq_21125183/article/details/80590934" target="_blank" rel="noopener">https://blog.csdn.net/qq_21125183/article/details/80590934</a><br>&emsp;&emsp;<a href="https://blog.csdn.net/weixin_44176696/article/details/111873717" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44176696/article/details/111873717</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据存储 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据存储 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
